<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
   <head>
      <title>jωiXML processor - Help</title>
      <link rel="stylesheet" href="../jwiXML.css" type="text/css" />
   </head>
   <body>
      <div>
         <h2><a href="https://invisiblexml.org/"><img src="../logos/logo_gradient.png" alt="InvisibleXML Logo"
                  width="60pt" /></a>
            <span style="font-style:italic">j</span>ω<img src="../logos/logotype.png" alt="InvisibleXML Logo"
               width="60pt" /> processor - HELP</h2>
         <p id="status" class="note">A SaxonJS/JavaScript processor of <a href="https://invisiblexml.org/">Invisible
               XML</a> - Version 0.9.8</p>
      </div>
      <h1>WORK IN PROGRESS!!</h1>
      <p>TODO:</p>
      <ul>
         <li>Cover error handing and display</li>
         <li>Describe input of grammars in XML format.</li>
         <li>Tidy up the presentation....</li>
         <li>Table of contents</li>
      </ul>
      <div>
         <p>For the runtime files and a sample jωiXML application see <a href="https://github.com/johnlumley/jwiXML"
               >here</a>.</p>
      </div>
      <div class="Zdescription">
         <p>This processor runs <i>entirely</i> within the browser client, using <a
               href="https://www.saxonica.com/saxon-js/documentation2/index.html">SaxonJS </a>as the top-level program
            and the <i>jwiXML</i> JavaScript library. There is <i>no</i> server-side processing, apart from initial
            delivery of necessary files.</p>
         <p>You can input and edit an iXML grammar either <i>ab initio</i> or by loading from a file on your computer or
            one of the test-case or sample grammars from the <a href="https://github.com/invisibleXML/ixml">iXML GitHub
               repository</a>. The input string can also be edited or loaded from file or, in the case of a test-case or
            sample grammar, by selecting from one of a number of provided input strings.</p>
      </div>
      <section>
         <h3>Editing grammars and inputs</h3>
         <div>
            <table>
               <tbody>
                  <tr>
                     <td>
                        <p>iXML grammars are edited in the upper text-area,<br />where usual keystokes are
                           supported,<br /> but there is no 'syntax awareness':</p>
                        <img width="400" src="img1.png" />
                     </td>
                     <td>
                        <p>Input strings to be parsed by that grammar are edited in the lower text-area:</p>
                        <img width="300" src="img2.png" />
                     </td>
                  </tr>
               </tbody>
            </table>
         </div>
      </section>
      <section>
         <h3>Parsing an input against a grammar</h3>
         <p>With the grammar and potential input string edited, clicking on the GO! button causes the following
            actions:</p>
         <h4>Parsing and compiling the grammar</h4>
         <p>The grammar defined by the text in the Grammar window is parsed and compiled as an iXML grammar to produce
            an internal object representing the compiled grammar. Assuming the grammar has valid iXML syntax, this is
            then displayed in the 'Parse Grammar' section, where various projections of the grammar can be displayed
            either in XML format or an iXML textual serialisation. Either the original parsed grammar or the compilation
            (i.e. where the grammar has been reduced to a canonical form) thereof can be shown.:</p>
         <table>
            <tbody>
               <tr>
                  <td>
                     <img width="300" src="img3.png" />
                  </td>
                  <td>
                     <img width="300" src="img4.png" />
                  </td>
                  <td>
                     <img width="300" src="img5.png" />
                  </td>
               </tr>
            </tbody>
         </table>
         <p>If you want to copy the parsed XML-format grammar the 'select grammar' button will select the whole of the
            grammar XML, so a simple 'Copy' keystroke action can get it into the clipboard as text.</p>
         <img width="300" src="img6.png" />
         <h4>Parsing the input string against the grammar</h4>
         <p>Assuming the grammar has compiled and the input text string is not empty (or the 'Allow an empty string as
            input' option is checked), the text string is then parsed against the grammar, giving results in the Results
            section.</p>
         <img width="300" src="img7.png" />
         <p>The following options are supported via checkboxes</p>
         <table>
            <thead>
               <tr>
                  <th>Option</th>
                  <th>Effect</th>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>Show Parser States</td>
                  <td>Displays the internal state transitions of the Earley parser operating on the input. This is
                        <em>NOT</em> recommended for large grammars and inputs as memory overflows can be
                     encountered.</td>
               </tr>
               <tr>
                  <td>Show only one ambiguous solution</td>
                  <td>When the parse is ambiguous, with multiple possible solutions, this forces only one to be
                     returned, which will still be marked as ambiguous</td>
               </tr>
               <tr>
                  <td>Treat as records</td>
                  <td>When checked, the input is assumed to be a sequence of records separated by character sequences
                     which match a given regular expression (for which '\n' is the default). The separator can be edited
                     in the displayed text input. </td>
               </tr>
               <tr>
                  <td>Show all processed marks</td>
                  <td>If checked, marks for ignore (-), attribute (@) or insertion (+) serialisation are not honoured
                     but rather placed on the full parse tree output either as an <code>@ixml:mark</code> attribute or an <code>ixml:insert</code>
                     element. This ony applies to marks on the original grammar and not to artefactual marks, such as
                     used for generated non-terminals for optionality or repetition.</td>
               </tr>
               <tr>
                  <td>Allow an empty string as input</td>
                  <td>Normally if the input is an empty string, no attempt is made to parse - just the grammar is
                     processed and displayed. Checking this allows processing of an empty string as input</td>
               </tr>
               <tr>
                  <td>Tover-Walsh rewrites</td>
                  <td>When checked, <code>f+</code> constructs are rewritten as <code>f+ => f-plus. f-plus: f, f-plus|
                        ().</code> rather than the <code>f-plus: f, f*.</code> rewrite given in the spec. This is likely
                     to become the default as it seems to perform significantly quicker</td>
               </tr>
            </tbody>
         </table>
      </section>
      <section>
         <h3>Loading grammars and inputs from external sources</h3>
         <table>
            <tbody>
               <tr>
                  <td>
                     <p>Both grammar and input texts can be read from local filestore by using the appropriate 'Choose
                        file' (or 'Browse') button, which permits a file to be read and its text loaded into the
                        textarea. The name of the file loaded is displayed next to the file chooser. Files can also be
                        'drag-and-dropped' onto the textarea, though in Firefox security settings will probably have to
                        be altered (it seems to work fine in Chrome).</p>
                     <img width="300" src="img8.png" />
                  </td>
                  <td>
                     <p>Grammars can also be loaded from web-repositories, in particular from the <a
                           href="https://github.com/invisiblexml/ixml/">InvisibleXML test-suites or sample grammars</a>
                        using the Grammar 'Test/sample' dropdown:</p>
                     <img width="300" src="img9.png" />
                     <p>A <a href="https://invisiblexml.org/test-catalog/">browsable catalog</a> of the test suite is
                        also available.</p>
                  </td>
               </tr>
            </tbody>
         </table>
         <p>When there are sample inputs available for one of these test or sample grammars, the 'Test/Sample' dropdown
            above the Input textarea will be populated.</p>
         <img width="300" src="img10.png" />
      </section>
   </body>
</html>
